import jsPDF from 'jspdf';
import type { QuizResponse } from '../types/quiz';

export async function generatePDF(response: QuizResponse, returnBlob = false): Promise<Blob | void> {
  return new Promise((resolve) => {
    const doc = new jsPDF();
    const pageWidth = doc.internal.pageSize.getWidth();
    const margin = 20;
    let yPos = 20;

    // Header
    doc.setFontSize(24);
    doc.setTextColor(102, 45, 145); // Purple color
    doc.text('Quiz Results', margin, yPos);
    yPos += 20;

    // User Info
    doc.setFontSize(14);
    doc.setTextColor(0, 0, 0);
    doc.text(`Name: ${response.name}`, margin, yPos);
    yPos += 10;
    doc.text(`Email: ${response.email}`, margin, yPos);
    yPos += 10;
    doc.text(`Date: ${new Date(response.timestamp).toLocaleDateString()}`, margin, yPos);
    yPos += 20;

    // Score
    doc.setFontSize(18);
    doc.text('Score Summary', margin, yPos);
    yPos += 15;
    doc.setFontSize(36);
    doc.setTextColor(102, 45, 145);
    doc.text(`${response.score}%`, margin, yPos);
    yPos += 25;

    // Analysis
    doc.setFontSize(14);
    doc.setTextColor(0, 0, 0);
    doc.text('Performance Analysis', margin, yPos);
    yPos += 10;

    const analysis = getScoreAnalysis(response.score);
    const splitAnalysis = doc.splitTextToSize(analysis, pageWidth - 2 * margin);
    doc.setFontSize(12);
    doc.text(splitAnalysis, margin, yPos);
    yPos += splitAnalysis.length * 8 + 20;

    // Question Breakdown
    doc.setFontSize(14);
    doc.text('Question Breakdown', margin, yPos);
    yPos += 10;

    doc.setFontSize(12);
    Object.entries(response.answers).forEach(([questionId, score], index) => {
      if (yPos > doc.internal.pageSize.getHeight() - 20) {
        doc.addPage();
        yPos = 20;
      }

      const questionText = `Question ${index + 1}`;
      doc.text(questionText, margin, yPos);
      doc.text(`Score: ${score}`, pageWidth - margin - 20, yPos);
      yPos += 10;
    });

    // Footer
    yPos = doc.internal.pageSize.getHeight() - 20;
    doc.setFontSize(10);
    doc.setTextColor(128, 128, 128);
    doc.text('Generated by Vidoora Quiz System', margin, yPos);

    if (returnBlob) {
      const blob = doc.output('blob');
      resolve(blob);
    } else {
      doc.save(`quiz-results-${response.id}.pdf`);
      resolve();
    }
  });
}

function getScoreAnalysis(score: number): string {
  if (score >= 90) {
    return 'Outstanding performance! You have demonstrated exceptional understanding of the subject matter. Your responses show a comprehensive grasp of key concepts and their practical applications.';
  } else if (score >= 80) {
    return 'Excellent work! You have shown strong knowledge across most areas. Consider reviewing the few questions you missed to achieve mastery of the subject.';
  } else if (score >= 70) {
    return 'Good job! You have achieved a solid understanding of the core concepts. Focus on the areas where you scored lower to strengthen your knowledge.';
  } else if (score >= 60) {
    return 'Fair performance. While you have grasped some key concepts, there is room for improvement. Consider reviewing the material and trying again.';
  } else {
    return 'This assessment indicates areas needing additional focus. We recommend reviewing the material and attempting the quiz again to strengthen your understanding.';
  }
}